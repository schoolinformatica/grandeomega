@using System.Linq;
@using Clustering
@using Data
@using models

@{
    ViewData["Title"] = "Home Page";
}

@{
    var ctx = Students.students.Where(x => x.Grade > 0);
    foreach (var student in ctx)
    {
        student.Filter();
    }

    var data = new DataSet(ctx.Select(x => x.ToGenericVector()).ToList());

    var k = new Kmeans(4, 100, data);
    k.Run();
    k.PrintClusters();
//    data = new DataSet(new List<GenericVector>(k.DataSet.Where(x => x.Cluster == 1).ToList()));
}

<div class="row">
    <h1>Statistics</h1>
    <div id="container" style="min-width: 310px; height: 400px; max-width: 800px; margin: 0 auto"></div>
    <div id="container2" style="min-width: 310px; height: 400px; max-width: 800px; margin: 0 auto"></div>
    
   <script src="~/lib/highcharts/highcharts.js"></script>

   <script>
       Highcharts.chart('container', {
    chart: {
        type: 'scatter',
        zoomType: 'xy'
    },
    title: {
        text: 'Attempts vs final grade'
    },
    subtitle: {
        text: 'Source: GrandeOmega'
    },
    xAxis: {
        title: {
            enabled: true,
            text: 'Attempts'
        },
        startOnTick: true,
        endOnTick: true,
        showLastLabel: true
    },
    yAxis: {
        title: {
            text: 'Grade'
        }
    },
    legend: {
        layout: 'vertical',
        align: 'left',
        verticalAlign: 'top',
        x: 100,
        y: 70,
        floating: true,
        backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF',
        borderWidth: 1
    },
    plotOptions: {
        scatter: {
            marker: {
                radius: 5,
                states: {
                    hover: {
                        enabled: true,
                        lineColor: 'rgb(100,100,100)'
                    }
                }
            },
            states: {
                hover: {
                    marker: {
                        enabled: false
                    }
                }
            },
            tooltip: {
                headerFormat: '<b>{series.name}</b><br>',
                pointFormat: '{point.x} success/attempts (%), {point.y} grade'
            }
        }
    },
    series: [
        {
        type: 'line',
        name: 'Regression Line',
        data: [[0, 1.11], [2000, 75]],
        marker: {
            enabled: false
        },
        states: {
            hover: {
                lineWidth: 0
            }
        },
        enableMouseTracking: false
    },{
        type: 'scatter',
        name: 'Grade per attempts',
        data: @Html.Raw(data.ToString()),
        marker: {
            radius: 4
        }
        
    }
    ]
});

   </script>

  
</div>
